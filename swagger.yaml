openapi: 3.0.3
info:
  title: New version of backend
  version: 1.0.0
  contact: {}
servers:
- url: https://dev.auditdb.io
paths:
  /api/auth/login:
    post:
      tags:
      - User service
      summary: Login
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test
                password:
                  type: string
                  example: test
            example:
              email: test
              password: test
      responses:
        '200':
          description: ''
  /api/user:
    post:
      tags:
      - User service
      summary: Create User
      description: Create User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_role:
                  type: string
                  example: customer
                email:
                  type: string
                  example: test
                name:
                  type: string
                  example: test
                password:
                  type: string
                  example: test
            example:
              current_role: customer
              email: test
              name: test
              password: test
      responses:
        '200':
          description: ''
  /api/user/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        example: 644519627a6706aee6f51970
        description: The user ID
    get:
      security:
        - bearerAuth: []
      tags:
      - User service
      summary: Get User
      description: Get User
      operationId: getUser
      responses:
        '200':
          description: ''
    delete:
      security:
        - bearerAuth: []
      tags:
      - User service
      summary: Delete User
      description: Delete User
      operationId: deleteUser
      responses:
        '200':
          description: ''
    patch:
      security:
        - bearerAuth: []
      tags:
      - User service
      summary: Change User
      description: Change User
      operationId: changeUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: new_name
            example:
              name: new_name
      responses:
        '200':
          description: ''
  /api/user/my_user:
    get:
      security:
        - bearerAuth: []
      tags:
      - User service
      summary: My User
      description: My User
      operationId: myUser
      responses:
        '200':
          description: ''
  /api/customer:
    post:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Create customer
      description: Create customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                about:
                  type: string
                  example: ''
                avatar:
                  type: string
                  example: ''
                company:
                  type: string
                  example: ''
                contacts:
                  type: object
                  properties:
                    test:
                      type: string
                      example: test
                first_name:
                  type: string
                  example: name
                last_name:
                  type: string
                  example: name
                public_contacts:
                  type: boolean
                  example: true
                tags:
                  type: array
                  items:
                    type: string
                    example: test
                  example:
                  - test
            example:
              about: ''
              avatar: ''
              company: ''
              contacts:
                test: test
              first_name: name
              last_name: name
              public_contacts: true
              tags:
              - test
      responses:
        '200':
          description: ''
  /api/customer/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      tags:
      - Customer service
      summary: Get Customer
      description: Get Customer
      operationId: getCustomer
      responses:
        '200':
          description: ''
    delete:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Delete customer
      description: Delete customer
      operationId: deleteCustomer
      responses:
        '200':
          description: ''
    patch:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Change customer
      description: Change customer
      operationId: changeCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: new name
            example:
              first_name: new name
      responses:
        '200':
          description: ''
  /api/my_customer:
    get:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: My customer
      description: My customer
      operationId: myCustomer
      responses:
        '200':
          description: ''
  /api/project:
    post:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Create project
      description: Create project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: test
                name:
                  type: string
                  example: test
                price:
                  type: number
                  example: 10
                publish_options:
                  type: object
                  properties:
                    publish:
                      type: boolean
                      example: true
                    ready_to_wait:
                      type: boolean
                      example: true
                scope:
                  type: array
                  items:
                    type: string
                    example: test
                  example:
                  - test
                status:
                  type: string
                  example: test
                tags:
                  type: array
                  items:
                    type: string
                    example: test
                  example:
                  - test
            example:
              description: test
              name: test
              price: 10
              publish_options:
                publish: true
                ready_to_wait: true
              scope:
              - test
              status: test
              tags:
              - test
      responses:
        '200':
          description: ''
  /api/project/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        example: 
    get:
      tags:
      - Customer service
      summary: Get project
      description: Get project
      operationId: getProject
      responses:
        '200':
          description: ''
    delete:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Delete project
      description: Delete project
      operationId: deleteProject
      responses:
        '200':
          description: ''
    patch:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: Change project
      description: Change project
      operationId: changeProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: new_name
            example:
              name: new_name
      responses:
        '200':
          description: ''
  /api/my_project:
    get:
      security:
        - bearerAuth: []
      tags:
      - Customer service
      summary: My project
      description: My project
      operationId: myProject
      responses:
        '200':
          description: ''
  /api/auditor:
    post:
      security:
        - bearerAuth: []
      tags:
      - Auditor service
      summary: Create auditor
      description: Create auditor
      operationId: createAuditor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                about:
                  type: string
                  example: ''
                avatar:
                  type: string
                  example: ''
                company:
                  type: string
                  example: ''
                contacts:
                  type: object
                  properties:
                    test:
                      type: string
                      example: test
                first_name:
                  type: string
                  example: name
                free_at:
                  type: string
                  example: ''
                last_name:
                  type: string
                  example: name
                price_range:
                  type: object
                  properties:
                    from:
                      type: number
                      example: 10
                    to:
                      type: number
                      example: 100
                public_contacts:
                  type: boolean
                  example: true
                tags:
                  type: array
                  items:
                    type: string
                    example: test
                  example:
                  - test
            example:
              about: ''
              avatar: ''
              company: ''
              contacts:
                test: test
              first_name: name
              free_at: ''
              last_name: name
              price_range:
                from: 10
                to: 100
              public_contacts: true
              tags:
              - test
      responses:
        '200':
          description: ''
  /api/my_auditor:
    get:
      security:
        - bearerAuth: []
      tags:
      - Auditor service
      summary: My auditor
      description: My auditor
      operationId: myAuditor
      responses:
        '200':
          description: ''
  /api/audit_request:
    post:
      security:
        - bearerAuth: []
    
      tags:
      - Audit service
      summary: Create request
      description: Create request
      operationId: createRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auditor_id:
                  type: string
                  example: 643e1268e9c98734100ab480
                customer_id:
                  type: string
                  example: 643e1268e9c98734100ab480
                description:
                  type: string
                  example: ''
                project_id:
                  type: string
                  example: 643e21aee27db77a0354f8ed
                time:
                  type: object
                  properties:
                    from:
                      type: string
                      example: 21.04.2002
                    to:
                      type: string
                      example: 21.04.2002
            example:
              auditor_id: 643e1268e9c98734100ab480
              customer_id: 643e1268e9c98734100ab480
              description: ''
              project_id: 643e21aee27db77a0354f8ed
              time:
                from: 21.04.2002
                to: 21.04.2002
      responses:
        '200':
          description: ''
  /api/audit_request/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Get request
      description: Get request
      operationId: getRequest
      responses:
        '200':
          description: ''
    delete:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Delete request
      description: Delete request
      operationId: deleteRequest
      responses:
        '200':
          description: ''
    patch:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Change request
      description: Change request
      operationId: changeRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: new desc
            example:
              description: new desc
      responses:
        '200':
          description: ''
  /api/my_audit_request/{role}:
    parameters:
      - in: path
        name: role
        required: true
        schema:
          type: string
        description: customer or auditor
    get:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: My request
      description: My request
      operationId: myRequest
      responses:
        '200':
          description: ''
  /api/audit:
    post:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Create audit
      description: Create audit
      operationId: createAudit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auditor_contacts:
                  type: object
                  properties:
                    test:
                      type: string
                      example: test
                auditor_id:
                  type: string
                  example: 643e1268e9c98734100ab480
                customer_contacts:
                  type: object
                  properties: {}
                customer_id:
                  type: string
                  example: 643e1268e9c98734100ab480
                description:
                  type: string
                  example: ''
                id:
                  type: string
                  example: 643e26d96d7c9d1d29f037c8
                price:
                  type: number
                  example: 42
                price_range:
                  type: object
                  properties:
                    from:
                      type: number
                      example: 10
                    to:
                      type: number
                      example: 100
                project_avatar:
                  type: string
                  example: ''
                project_id:
                  type: string
                  example: 643e21aee27db77a0354f8ed
                project_name:
                  type: string
                  example: new_name
                project_scope:
                  type: array
                  items:
                    type: string
                    example: test
                  example:
                  - test
                time:
                  type: object
                  properties:
                    from:
                      type: string
                      example: 21.04.2002
                    to:
                      type: string
                      example: 21.04.2002
            example:
              auditor_contacts:
                test: test
              auditor_id: 643e1268e9c98734100ab480
              customer_contacts: {}
              customer_id: 643e1268e9c98734100ab480
              description: ''
              id: 643e26d96d7c9d1d29f037c8
              price: 42
              price_range:
                from: 10
                to: 100
              project_avatar: ''
              project_id: 643e21aee27db77a0354f8ed
              project_name: new_name
              project_scope:
              - test
              time:
                from: 21.04.2002
                to: 21.04.2002
      responses:
        '200':
          description: ''
  /api/audit/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Get audit
      description: Get audit
      operationId: getAudit
      responses:
        '200':
          description: ''
    delete:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Delete audit
      description: Delete audit
      operationId: deleteAudit
      responses:
        '200':
          description: ''
    patch:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: Change audit
      description: Change audit
      operationId: changeAudit
      responses:
        '200':
          description: ''
  /api/my_audit/{role}:
    parameters:
      - in: path
        name: role
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      tags:
      - Audit service
      summary: My audit
      description: My audit
      operationId: myAudit
      responses:
        '200':
          description: ''
  /api/file:
    post:
  
      security:
        - bearerAuth: []
      tags:
      - File service
      summary: Create file
      description: Create file
      operationId: createFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                auditorId:
                  type: string
                  example: 643e1268e9c98734100ab480
                customerId:
                  type: string
                  example: 643e1268e9c98734100ab480
                file:
                  type: string
                  format: binary
                original_name:
                  type: string
                  example: test.png
                path:
                  type: string
                  example: lol
                private:
                  type: string
                  example: 'true'
      responses:
        '200':
          description: ''
  /api/file/{path}:
    parameters:
      - in: path
        required: true
        schema:
          type: string
        name: path
    get:
      tags:
      - File service
      summary: Get file
      description: Get file
      operationId: getFile
      responses:
        '200':
          description: ''
  /api/search:
    get:
      tags:
      - Search service
      summary: search
      description: search
      operationId: search
      parameters:
      - name: query
        in: query
        schema:
          type: string
          example: ''
      - name: tags
        in: query
        schema:
          type: string
          example: ''
      - name: page
        in: query
        schema:
          type: string
          example: '0'
      - name: per_page
        in: query
        schema:
          type: string
          example: '0'
      - name: kind
        in: query
        schema:
          type: string
          example: audit_request
      - name: price_from
        in: query
        schema:
          type: string
          example: '65'
      - name: price_to
        in: query
        schema:
          type: string
          example: '67'
      responses:
        '200':
          description: ''
tags:
- name: User service
- name: Customer service
- name: Auditor service
- name: Audit service
- name: File service
- name: Search service

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 


